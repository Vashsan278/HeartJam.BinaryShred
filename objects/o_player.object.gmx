<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-40</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,o_dust);
instance_create(x,y,o_light);
energy = 100;
stasis = false;
//present = false;
walking = 0;
idle = 0;
audio_sound_gain(sfx_walk, 1, 1);

///initalize variables

// 250 pixels per second, so independent of room speed

robo_speed = 225/room_speed;

// subimage to start with animation
// used in Draw event
robo_frame = 0;

// change in x and y for robo
// (aka vertical and horizontal speed)
robo_dx = 0;
robo_dy = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stasis = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>energy -= 0.1;

if energy &gt;= 100 {
    energy = 100;
}

if energy &lt;= 0 {
    energy = 0;
}

if energy = 0 {
    audio_play_sound(sfx_death,9,false);
    with instance_create(x,y,o_recharge) {
        visible = false;
        image_xscale = -1;
        alarm[0] = 100;
    }
    stasis = true;
    alarm[0] = 100;
    if o_enemy.state = states.chase {
            room_goto(gameover);
    }
}

if place_meeting(x,y,o_recharge) &amp;&amp; o_enemy.state != states.chase {
    if !audio_is_playing(sfx_recharge) &amp;&amp; energy != 100 {
        audio_play_sound(sfx_recharge,9,false);
    }
    energy++;
}

if walking &gt; 0 {
    if !audio_is_playing(sfx_walk) {
        audio_play_sound(sfx_walk,9,true);
    }
} else {
    audio_stop_sound(sfx_walk);
}

if keyboard_check_pressed(ord('W'))
|| keyboard_check_pressed(ord('A'))
|| keyboard_check_pressed(ord('S'))
|| keyboard_check_pressed(ord('D')) {
    walking += 1;
    idle = 0;
}
if keyboard_check_released(ord('W'))
|| keyboard_check_released(ord('A'))
|| keyboard_check_released(ord('S'))
|| keyboard_check_released(ord('D')) {
    walking -= 1;
}
if !keyboard_check(ord('W'))
&amp;&amp; !keyboard_check(ord('A'))
&amp;&amp; !keyboard_check(ord('S'))
&amp;&amp; !keyboard_check(ord('D')) {
    walking = 0;
    idle++;
}

if idle = 5 {
    if sprite_index = s_player_move_forwards {
        sprite_index = s_player_front;
    }
    if sprite_index = s_player_move_backwards {
        sprite_index = s_player_back;
    }
    if sprite_index = s_player_move_right {
        sprite_index = s_player_right;
    }
    if sprite_index = s_player_move_left {
        sprite_index = s_player_left;
    }
}

if idle &gt;= 90 {
    sprite_index = s_player_idle;
    image_speed = 0.5;
}

// Movement basics
if stasis = false {
//robo_speed = 250/room_speed;

if keyboard_check(ord('W'))
|| keyboard_check(ord('A'))
|| keyboard_check(ord('S'))
|| keyboard_check(ord('D')) {
    image_speed = 0.5;
} else {
    image_speed = 0;
    image_index = 0;
}

if keyboard_check(ord('W')) &amp;&amp; !keyboard_check(ord('S')) {
    sprite_index = s_player_move_backwards;
}

if keyboard_check(ord('S')) &amp;&amp; !keyboard_check(ord('W')) {
    sprite_index = s_player_move_forwards;
}

if keyboard_check(ord('A')) &amp;&amp; !keyboard_check(ord('D')) {
    sprite_index = s_player_move_left;
}

if keyboard_check(ord('D')) &amp;&amp; !keyboard_check(ord('A')) {
    sprite_index = s_player_move_right;
}

if image_index = 3 {
    image_index = 0;
}

///animation and movement

//variables
mouse_direction = point_direction(x, y, mouse_x, mouse_y)
rounding = false

key_up    = keyboard_check(ord('W'))
key_left  = keyboard_check(ord('A'))
key_down  = keyboard_check(ord('S'))
key_right = keyboard_check(ord('D'))

//horizontal movement
if key_left &amp;&amp; !key_right
    robo_dx = -robo_speed
else if !key_left &amp;&amp; key_right
    robo_dx = robo_speed
else if !key_left &amp;&amp; !key_right
    robo_dx = 0

//vertical movement
if key_up &amp;&amp; !key_down
    robo_dy = -robo_speed
else if !key_up &amp;&amp; key_down
    robo_dy = robo_speed
else if !key_up &amp;&amp; !key_down
    robo_dy = 0
} else {
    //robo_speed = 0;
    robo_dx = 0;
    robo_dy = 0;
}
    
//collisions
if (place_meeting(x+robo_dx,y,o_block))
{
    while(!place_meeting(x+sign(robo_dx),y,o_block))
    {
        x += sign(robo_dx);
    }
    robo_dx = 0;
    
    if robo_dy = 0
    {
        scr_round_TB();
        rounding = true;
    }
}
x += robo_dx;

if (place_meeting(x,y+robo_dy,o_block))
{
    while(!place_meeting(x,y+sign(robo_dy),o_block))
    {
        y += sign(robo_dy);
    }
    robo_dy = 0;
    
    if robo_dx = 0
    {
        scr_round_LR();
        rounding = true
    }
}
y += robo_dy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>energy -= 0.4;
/*
if energy &lt;= 0 {
    audio_stop_all();
    room_goto(gameover);
    instance_destroy();
    audio_play_sound(mus_gameover,5,true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_newroom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room_exists(other.new_room)) {
    room_goto(other.new_room);
    x = other.new_x;
    y = other.new_y;
    
    if audio_is_playing(mus_danger) {
        audio_stop_sound(mus_danger);
        audio_play_sound(mus_overture,5,true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//energy -= 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//energy += 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(s_player_shadow,0,x,y+16);
draw_self();
//draw_text(x,y,energy);
//draw_text(x,y,walking);
//draw_text(x,y,obj_lightre.distance);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,o_activate);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
